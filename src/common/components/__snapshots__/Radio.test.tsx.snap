// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio [NEGATIVE] should prevent click while element is disabled 1`] = `
.c1 {
  display: inline-grid;
  gap: 0.25rem;
  grid-template-columns: 2.5rem;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c3 {
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  display: inline-block;
}

.c0 input {
  display: none;
}

.c0 .c2 > svg > :nth-child(1) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  stroke: #DBDBDB;
  fill: #FFFFFF;
}

.c0 .c2 > svg > :nth-child(2) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
}

<body>
  <div>
    <div
      class="c0 "
      disabled=""
      kind="radio"
    >
      <label
        class="c1"
        for="1"
        kind="radio"
      >
        <div
          class="c2 c3"
        >
          <svg />
        </div>
      </label>
      <input
        data-testid="radio"
        disabled=""
        id="1"
        type="checkbox"
      />
    </div>
  </div>
</body>
`;

exports[`Radio [NEGATIVE] should render with wrong props 1`] = `
.c2 {
  display: inline-grid;
  gap: 0.25rem;
  grid-template-columns: 2.5rem;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c4 {
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  display: inline-block;
}

.c0 input {
  display: none;
}

.c0 .c3 > svg > :nth-child(1) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  fill: #4475E3;
}

.c0 .c3 > svg > :nth-child(2) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
}

.c0:hover > .c1 {
  cursor: pointer;
}

<body>
  <div>
    <div
      class="c0 "
      kind="radio"
    >
      <label
        class="c1 c2"
        for="1"
        kind="radio"
      >
        <div
          class="c3 c4"
        >
          <svg />
        </div>
      </label>
      <input
        checked=""
        data-testid="radio"
        id="1"
        type="checkbox"
      />
    </div>
  </div>
</body>
`;

exports[`Radio [NEGATIVE] should render without props 1`] = `
.c2 {
  display: inline-grid;
  gap: 0.25rem;
  grid-template-columns: 2.5rem;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c4 {
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  display: inline-block;
}

.c0 input {
  display: none;
}

.c0 .c3 > svg > :nth-child(1) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  stroke: #B3C6F1;
}

.c0 .c3 > svg > :nth-child(2) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
}

.c0:hover > .c1 {
  cursor: pointer;
}

.c0:hover .c3 svg > :first-child {
  fill: #ECF1FC;
}

<body>
  <div>
    <div
      class="c0 "
    >
      <label
        class="c1 c2"
        for="1"
      >
        <div
          class="c3 c4"
        >
          <svg />
        </div>
      </label>
      <input
        data-testid="radio"
        id="1"
        type="checkbox"
      />
    </div>
  </div>
</body>
`;

exports[`Radio [NEGATIVE] test radio disabled state 1`] = `
.c1 {
  display: inline-grid;
  gap: 0.25rem;
  grid-template-columns: 2.5rem;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c3 {
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  display: inline-block;
}

.c0 input {
  display: none;
}

.c0 .c2 > svg > :nth-child(1) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  stroke: #DBDBDB;
  fill: #FFFFFF;
}

.c0 .c2 > svg > :nth-child(2) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
}

<body>
  <div>
    <div
      class="c0 "
      disabled=""
      kind="radio"
    >
      <label
        class="c1"
        for="1"
        kind="radio"
      >
        <div
          class="c2 c3"
        >
          <svg />
        </div>
      </label>
      <input
        data-testid="radio"
        disabled=""
        id="1"
        type="checkbox"
      />
    </div>
  </div>
</body>
`;

exports[`Radio test radio click 1`] = `
.c2 {
  display: inline-grid;
  gap: 0.25rem;
  grid-template-columns: 2.5rem;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c4 {
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  display: inline-block;
}

.c0 input {
  display: none;
}

.c0 .c3 > svg > :nth-child(1) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  stroke: #B3C6F1;
}

.c0 .c3 > svg > :nth-child(2) {
  -webkit-transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
  transition: stroke-color 300ms cubic-bezier(0.45,0.05,0,1), fill 300ms cubic-bezier(0.45,0.05,0,1);
}

.c0:hover > .c1 {
  cursor: pointer;
}

.c0:hover .c3 svg > :first-child {
  fill: #ECF1FC;
}

<body>
  <div>
    <div
      class="c0 "
      kind="radio"
    >
      <label
        class="c1 c2"
        for="1"
        kind="radio"
      >
        <div
          class="c3 c4"
        >
          <svg />
        </div>
      </label>
      <input
        data-testid="radio"
        id="1"
        type="checkbox"
      />
    </div>
  </div>
</body>
`;
